import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import axios from "axios";
import { NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import React, { useState } from "react";
import Comment from "../../../components/Comment";
import CommunityWidget from "../../../components/CommunityWidget";
import Navbar from "../../../components/Navbar";
import Post from "../../../components/Post";
import { CommunityType } from "../../../types/community";
import { PostType } from "../../../types/post";

const Community: NextPage = () => {
  const { data: session } = useSession();
  const router = useRouter();
  const [content, setContent] = useState("");
  const queryClient = useQueryClient();

  const { data: post, isLoading } = useQuery<PostType>(
    ["posts", router.query.community, router.query.pid],
    () =>
      axios
        .get(
          `/api/post?community=${router.query.community}&_id=${router.query.pid}`
        )
        .then((res) => res.data[0])
  );

  const { data: community } = useQuery<CommunityType>(
    ["community", router.query.community],
    () =>
      axios
        .get(`/api/community?name=${router.query.community}`)
        .then((res) => res.data[0])
  );

  const commentMutation = useMutation(
    () =>
      axios.put(`/api/post?action=comment&_id=${router.query.pid}`, {
        content,
      }),
    {
      onSuccess: () => {
        queryClient.invalidateQueries([
          "posts",
          router.query.community,
          router.query.pid,
        ]);
        setContent("");
      },
    }
  );

  return (
    <div className="bg-black text-neutral-300 min-h-screen">
      <Head>
        <title>Reddit Clone</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <main className="max-w-5xl mx-auto p-4 grid grid-cols-3 gap-4">
        <section className="flex flex-col gap-4 col-span-3 lg:col-span-2">
          {isLoading && (
            <Image
              src="/assets/loading.svg"
              alt="loading"
              width={64}
              height={64}
              priority
            />
          )}
          {post && <Post key={post._id} post={post} />}

          {session && (
            <div className="bg-neutral-900 rounded-md flex flex-col gap-4 p-4">
              <div className="border border-neutral-700 rounded-md w-full">
                <textarea
                  value={content}
                  onChange={(event) => setContent(event.target.value)}
                  placeholder="What are your thoughts?"
                  className="bg-transparent p-2 w-full min-h-[8rem]"
                />
              </div>

              <div className="flex justify-end">
                <button
                  onClick={() => {
                    if (!session) return;
                    if (!content) return alert("Please write a comment");
                    commentMutation.mutate();
                  }}
                  className="bg-gray-100 hover:bg-gray-300 py-1 px-4 rounded-full text-black font-semibold"
                >
                  Comment
                </button>
              </div>
            </div>
          )}

          <h1 className="py-4 mb-4 font-bold text-lg border-b border-neutral-700">
            Comments
          </h1>

          {post?.comments?.length ? (
            <div className="bg-neutral-900 rounded-md flex flex-col divide-y divide-neutral-800">
              {post.comments
                .sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1))
                .map((comment) => (
                  <Comment key={comment._id} comment={comment} />
                ))}
            </div>
          ) : (
            <p className="text-neutral-500 text-lg text-center mb-4">
              There are no comments
            </p>
          )}
        </section>
        <section className="row-start-1 lg:row-start-auto col-span-3 lg:col-span-1">
          {community && <CommunityWidget community={community} />}
        </section>
      </main>
    </div>
  );
};

export default Community;
